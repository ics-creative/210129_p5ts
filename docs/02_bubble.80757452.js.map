{"mappings":"qhBA0HA,IAAIA,EA1HJC,EAAA,UA0HA,EAzGgBC,IAiBd,IAAAC,EAAA,GAEAC,GARA,IAeA,MAAMC,EAAY,KAGgC,MAA1CC,EAAQJ,EAAEK,UAAY,EAEtBC,EAAgBN,EAAEO,WAAaL,EApBvC,IAsBQM,EAAIF,EACNN,EAAES,OAAST,EAAEU,MAAQV,EAAEK,QAAO,IAAO,KACrCL,EAAEK,SACAM,EAAIL,EAAgBN,EAAEY,OAASZ,EAAEa,OAASb,EAAEK,QAAO,IAAO,KAAQ,IAGRJ,EAAxDa,KAAK,CACXC,IAAK,GAAEP,IAAGG,GACVK,KAAMhB,EAAEiB,IAAIb,EAAO,EAAG,EAtC1B,KAEA,IAqCIc,MAAOlB,EAAEiB,IAAIb,EAAO,EAAG,EAnC3B,KAEA,KAkCIe,OAAQC,KAAKf,SAAW,MAkC5BL,EAAAqB,MACU,KACRrB,EAAEsB,aAAatB,EAAEuB,YAAavB,EAAEwB,eAGlCxB,EAAAyB,KAAA,KAME,IAJAzB,EAAEc,OACFd,EAAE0B,WAAW1B,EAAE2B,MAvEX,YAwEJ3B,EAAE4B,UAAU5B,EAAE6B,QArCd5B,EAAUA,EAAQ6B,QAAQC,GAAMA,EAAEhB,IAAIJ,EAAIX,EAAEa,OAASkB,EAAEf,MAAQ,IAuCxDf,EAAQ+B,OAtFP,IAuFN7B,IAnCFF,EAAQgC,SAASF,IACfA,EAAEhB,IAAIJ,GAAKoB,EAAEb,SAMfjB,EAAQgC,SAASF,IAEmB,MAA5BG,EAAQlC,EAAEkC,MAAgB,GAAVH,EAAEhB,IAAIP,EAAkB,GAAVuB,EAAEhB,IAAIJ,GACpCwB,EAASnC,EAAEiB,IAAIiB,EAAO,EAAG,GAAG,GAAK,IACjCP,EAAQ3B,EAAE2B,MAjDd,WAkDF3B,EAAEoC,OAAOT,GACTI,EAAEZ,OAASnB,EAAEqC,KAAKV,GAAS3B,EAAEsC,SAEmBtC,EAA9CuC,OACAR,EAAEhB,IAAIP,EAAIR,EAAEU,MAAQyB,EACpBJ,EAAEhB,IAAIJ,EAAIX,EAAEa,OACZkB,EAAEf,KAAOhB,EAAEU,UAqBfV,EAAEwC,OAGJxC,EAAEyC,WAAa,KACbvC,EAAiBF,EAAEO,YAGrBP,EAAE0C,cAAgB,KAChB1C,EAAE2C,aAAa3C,EAAEuB,YAAavB,EAAEwB","sources":["src/02_bubble.ts"],"sourcesContent":["import p5 from \"p5\";\n\n/** バブルの情報を定義する型 */\ntype Bubble = {\n  /** 位置（画面サイズに対する0〜1の相対位置） */\n  pos: {\n    x: number;\n    y: number;\n  };\n  /** サイズ(px) */\n  size: number;\n  /** 上昇スピード（画面高さに対する0〜1の相対値） */\n  speed: number;\n  /** 塗りつぶすか？ */\n  isFill: boolean;\n};\n\nconst sketch = (p: p5) => {\n  /** バブルの数 */\n  const COUNT = 40;\n  /** 最小サイズ（画面幅を1） */\n  const MINSIZE = 0.005;\n  /** 最大サイズ（画面幅を1） */\n  const MAXSIZE = 0.2;\n  /** 最小速度（画面の高さを1として、1フレームごとに動く量の最小値） */\n  const MINSPEED = 0.005;\n  /** 最大速度（画面の高さを1として、1フレームごとに動く量の最大値） */\n  const MAXSPEED = 0.02;\n  /** カーソル移動後、その位置からバブルを出し続ける時間（フレーム） */\n  const MOUSE_ACTIVE_FRAMES = 120;\n  /** 背景色 */\n  const BG_COLOR = \"#171d21\";\n  /** バブルの色 */\n  const BUBBLE_COLOR = \"#77acb5\";\n  /** 生成したバブルを格納する配列 */\n  let bubbles: Bubble[] = [];\n  /** 最後にカーソルが動いた時間（フレーム） */\n  let lastMouseMoved = -MOUSE_ACTIVE_FRAMES;\n\n  /**\n   * バブルを追加します。\n   * カーソルを動かしている場合にはカーソル位置に、停止している場合は画面下のランダムな位置に配置します。\n   */\n  const addBubble = () => {\n    // 仮想的な奥行きを決める（0=奥 ... 1=手前）\n    // 累乗することで奥の方が多めになるよう偏りをつける\n    const zDist = p.random() ** 3;\n    // カーソルの位置に配置するか？　カーソルを移動してから一定時間はカーソル位置を利用する\n    const isUseMousePos = p.frameCount - lastMouseMoved < MOUSE_ACTIVE_FRAMES;\n    // 初期位置のx, y座標を決定\n    const x = isUseMousePos\n      ? p.mouseX / p.width + p.random(-0.05, 0.05)\n      : p.random();\n    const y = isUseMousePos ? p.mouseY / p.height + p.random(-0.05, 0.05) : 1.2;\n    // バブルを追加\n    // 奥行きが手前にあるほど、サイズが大きくなり見かけの動きも早くなる\n    bubbles.push({\n      pos: { x, y },\n      size: p.map(zDist, 0, 1, MINSIZE, MAXSIZE),\n      speed: p.map(zDist, 0, 1, MINSPEED, MAXSPEED),\n      isFill: Math.random() > 0.5,\n    });\n  };\n\n  /** 画面外に出たバブルを配列から除去する */\n  const removeOutBubbles = () => {\n    bubbles = bubbles.filter((b) => b.pos.y * p.height + b.size >= 0);\n  };\n\n  /** バブルの位置を更新する */\n  const updateBubbles = () => {\n    bubbles.forEach((b) => {\n      b.pos.y -= b.speed;\n    });\n  };\n\n  /** バブルを描画する */\n  const drawBubbles = () => {\n    bubbles.forEach((b) => {\n      // ノイズを使って左右の揺れの値を作る\n      const noise = p.noise(b.pos.x * 20, b.pos.y * 20);\n      const xShift = p.map(noise, 0, 1, -15, 15);\n      const color = p.color(BUBBLE_COLOR);\n      p.stroke(color);\n      b.isFill ? p.fill(color) : p.noFill();\n      // バブルの位置に計算したノイズを加えて円を描画する\n      p.circle(\n        b.pos.x * p.width + xShift,\n        b.pos.y * p.height,\n        b.size * p.width\n      );\n    });\n  };\n\n  /** 初期化処理 */\n  p.setup = () => {\n    p.createCanvas(p.windowWidth, p.windowHeight);\n  };\n\n  /** フレームごとの描画処理 */\n  p.draw = () => {\n    p.push();\n    p.background(p.color(BG_COLOR));\n    p.blendMode(p.SCREEN);\n    removeOutBubbles();\n    while (bubbles.length < COUNT) {\n      addBubble();\n    }\n    updateBubbles();\n    drawBubbles();\n    p.pop();\n  };\n\n  p.mouseMoved = () => {\n    lastMouseMoved = p.frameCount;\n  };\n\n  p.windowResized = () => {\n    p.resizeCanvas(p.windowWidth, p.windowHeight);\n  };\n};\n\nnew p5(sketch);\n"],"names":["$parcel$interopDefault","parcelRequire","p","bubbles","lastMouseMoved","addBubble","zDist","random","isUseMousePos","frameCount","x","mouseX","width","y","mouseY","height","push","pos","size","map","speed","isFill","Math","setup","createCanvas","windowWidth","windowHeight","draw","background","color","blendMode","SCREEN","filter","b","length","forEach","noise","xShift","stroke","fill","noFill","circle","pop","mouseMoved","windowResized","resizeCanvas"],"version":3,"file":"02_bubble.80757452.js.map"}